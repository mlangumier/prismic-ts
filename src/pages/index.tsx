import Head from "next/head";
import { GetStaticPropsContext, NextPage } from "next";
import { SliceZone } from "@prismicio/react";
import type { Content } from "@prismicio/client";
import { components } from "../../slices";
import { createClient } from "../../prismicio";
import { LinkComponent } from "@/components/link";

interface IProps {
  page: Content.HomepageDocument;
  experiences: Content.ExperienceDocument[];
  thematics: Content.ThematiqueDocument[];
  regions: Content.RegionDocument[];
  cities: Content.CityDocument[];
}

const Homepage: NextPage<IProps> = ({
  page,
  experiences,
  thematics,
  regions,
  cities,
}) => {
  return (
    <>
      <Head>
        <title>Prismic TS</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-widthnitial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h2 className="my-8 text-center text-xl">Prismic TS TailwindCss</h2>
        <div className="py-8 mx-2">
          <div className="py-2">
            <h2 className="uppercase">Thématiques</h2>
            <div className="flex flex-wrap items-center gap-2 mt-2">
              {thematics.map((thematic: Content.ThematiqueDocument) => (
                <LinkComponent
                  pageType="thematique"
                  uid={thematic.uid}
                  typeDataTitle={thematic.data.name[0].text}
                  key={thematic.id}
                />
              ))}
            </div>
          </div>

          <div className="py-2">
            <h2 className="uppercase">Régions</h2>
            <div className="flex flex-wrap items-center gap-2 mt-2">
              {regions.map((region: Content.RegionDocument) => (
                <LinkComponent
                  pageType="location"
                  uid={region.uid}
                  typeDataTitle={region.data.name}
                  key={region.id}
                />
              ))}
            </div>
          </div>

          <div className="py-2">
            <h2 className="uppercase">Villes</h2>
            <div className="flex flex-wrap items-center gap-2 mt-2">
              {cities.map((city: Content.CityDocument) => (
                <LinkComponent
                  pageType="city"
                  uid={city.uid}
                  typeDataTitle={city.data.name}
                  key={city.id}
                />
              ))}
            </div>
          </div>

          <div className="py-2">
            <h2 className="uppercase">Expériences</h2>
            <div className="flex flex-wrap items-center gap-2 mt-2">
              {experiences.map((experience: Content.ExperienceDocument) => (
                <LinkComponent
                  pageType="experience"
                  uid={experience.uid}
                  typeDataTitle={experience.data.title[0].text}
                  key={experience.id}
                />
              ))}
            </div>
          </div>
        </div>

        {/* <SliceZone slices={page.data.slices} components={components} /> */}
      </main>
    </>
  );
};

export default Homepage;

export async function getStaticProps({ previewData }: GetStaticPropsContext) {
  const client = createClient({ previewData });

  const page = await client.getSingle("homepage");

  const thematics = await client.getAllByType("thematique");
  const regions = await client.getAllByType("region");
  const cities = await client.getAllByType("city");
  const experiences = await client.getAllByType("experience");

  return { props: { page, experiences, thematics, regions, cities } };
}
